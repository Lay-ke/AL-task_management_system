<!-- views/admin/dashboard.ejs -->
<!DOCTYPE html>
<html>
<head>
  <title>Admin Dashboard</title>
  <link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css" rel="stylesheet">
</head>

<body class="bg-gray-100">
  <div class="container mx-auto px-4 py-8">
    <% if (isAuthenticated) { %>
      <div>
          <h2>Welcome, <%= adminInfo.username %></h2>
      </div>
    <% } %>
    
    <div class="flex justify-between items-center mb-8">
      <h1 class="text-3xl font-bold">Task Management Dashboard</h1>
      <div class="flex items-center space-x-4">
        <!-- Create New Task Button -->
        <button onclick="openNewTaskModal()" class="bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded">
          Create New Task
        </button>
        <!-- Logout Button -->
        <a href="/dev/admin/logout" class="bg-red-500 text-white font-bold py-2 px-4 rounded hover:bg-red-700">
          Logout
        </a>
      </div>
    </div>

    <!-- Task List -->
    <div class="bg-white rounded-lg shadow-md p-6">
      <h2 class="text-xl font-bold mb-4">All Tasks</h2>
      <div class="overflow-x-auto">
        <table class="min-w-full">
          <thead>
            <tr class="bg-gray-100">
              <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Title</th>
              <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Description</th>
              <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Assigned To</th>
              <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Status</th>
              <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Deadline</th>
              <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Actions</th>
            </tr>
          </thead>
          <tbody class="bg-white divide-y divide-gray-200">
            <% tasks.forEach(task => { %>
              <tr>
                <td class="px-6 py-4 whitespace-nowrap"><%= task.title %></td>
                <td class="px-6 py-4 whitespace-nowrap"><%= task.description %></td>
                <td class="px-6 py-4 whitespace-nowrap"><%= task.assignedTo %></td>
                <td class="px-6 py-4 whitespace-nowrap">
                  <span class="px-2 inline-flex text-xs leading-5 font-semibold rounded-full 
                    <%= task.status === 'COMPLETED' ? 'bg-green-100 text-green-800' : 
                        task.status === 'IN_PROGRESS' ? 'bg-yellow-100 text-yellow-800' : 
                        'bg-gray-100 text-gray-800' %>">
                    <%= task.status %>
                  </span>
                </td>
                <td class="px-6 py-4 whitespace-nowrap"><%= new Date(task.deadline).toLocaleDateString() %></td>
                <td class="px-6 py-4 whitespace-nowrap">
                  <button onclick="openEditTaskModal('<%= task.task_Id %>')" class="text-blue-600 hover:text-blue-900">Edit</button>
                  <button onclick="deleteTask('<%= task.task_Id %>')" class="text-red-600 hover:text-red-900">Delete</button>
                </td>
                
              </tr>
            <% }); %>
          </tbody>
        </table>
      </div>
    </div>

    <!-- New Task Modal -->
    <div id="newTaskModal" class="hidden fixed inset-0 bg-gray-600 bg-opacity-50 overflow-y-auto h-full w-full">
      <div class="relative top-20 mx-auto p-5 border w-96 shadow-lg rounded-md bg-white">
        <h3 class="text-lg font-bold mb-4">Create New Task</h3>
        <form id="newTaskForm" action="/dev/admin/tasks/create" method="POST">
          <div class="mb-4">
            <label class="block text-gray-700 text-sm font-bold mb-2">Title</label>
            <input type="text" name="title" class="shadow appearance-none border rounded w-full py-2 px-3">
          </div>
          <div class="mb-4">
            <label class="block text-gray-700 text-sm font-bold mb-2">Description</label>
            <textarea name="description" class="shadow appearance-none border rounded w-full py-2 px-3"></textarea>
          </div>
          <div class="mb-4">
            <label class="block text-gray-700 text-sm font-bold mb-2">Assign To</label>
            <select name="assignedTo" class="shadow appearance-none border rounded w-full py-2 px-3">
              <% teamMembers.forEach(member => { %>
                <option value="<%= member.username %>"><%= member.username %></option>
              <% }); %>
            </select>
          </div>
          <div class="mb-4">
            <label class="block text-gray-700 text-sm font-bold mb-2">Deadline</label>
            <input type="date" name="deadline" class="shadow appearance-none border rounded w-full py-2 px-3">
          </div>
          <div class="flex justify-end">
            <button type="button" onclick="closeNewTaskModal()" class="mr-2 bg-gray-500 hover:bg-gray-700 text-white font-bold py-2 px-4 rounded">
              Cancel
            </button>
            <button type="submit" class="bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded">
              Create
            </button>
          </div>
        </form>
      </div>
    </div>

    
    <!-- Edit Task Modal -->
    <div id="editTaskModal" class="hidden fixed inset-0 bg-gray-600 bg-opacity-50 overflow-y-auto h-full w-full">
        <div class="relative top-20 mx-auto p-5 border w-96 shadow-lg rounded-md bg-white">
          <h3 class="text-lg font-bold mb-4">Edit Task</h3>
          <form id="editTaskForm">
            <input type="hidden" id="edittask_Id">
            <div class="mb-4">
              <label class="block text-gray-700 text-sm font-bold mb-2">Title</label>
              <input type="text" id="editTitle" class="shadow appearance-none border rounded w-full py-2 px-3">
            </div>
            <div class="mb-4">
              <label class="block text-gray-700 text-sm font-bold mb-2">Description</label>
              <input type="text" id="editDescription" class="shadow appearance-none border rounded w-full py-2 px-3">
            </div>
            <div class="mb-4">
              <label class="block text-gray-700 text-sm font-bold mb-2">Assign To</label>
              <select id="editAssignedTo" class="shadow appearance-none border rounded w-full py-2 px-3">
                <% teamMembers.forEach(member => { %>
                  <option value="<%= member.username %>"><%= member.username %></option>
                <% }); %>
              </select>
            </div>
            <div class="mb-4">
              <label class="block text-gray-700 text-sm font-bold mb-2">Status</label>
              <select id="editStatus" class="shadow appearance-none border rounded w-full py-2 px-3">
                <option value="PENDING">Pending</option>
                <option value="IN_PROGRESS">In Progress</option>
                <option value="COMPLETED">Completed</option>
              </select>
            </div>
            <div class="mb-4">
              <label class="block text-gray-700 text-sm font-bold mb-2">Deadline</label>
              <input type="date" id="editDeadline" class="shadow appearance-none border rounded w-full py-2 px-3">
            </div>
            <div class="flex justify-end">
              <button type="button" onclick="closeEditTaskModal()" class="mr-2 bg-gray-500 hover:bg-gray-700 text-white font-bold py-2 px-4 rounded">
                Cancel
              </button>
              <button type="submit" class="bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded">
                Update
              </button>
            </div>
          </form>
        </div>
      </div>

  

  <script>
    function openNewTaskModal() {
      document.getElementById('newTaskModal').classList.remove('hidden');
    }

    function closeNewTaskModal() {
      document.getElementById('newTaskModal').classList.add('hidden');
    }

    const tasks = <%-JSON.stringify(tasks)%>;

    function openEditTaskModal(task_Id) {
        const task = tasks.find(t => t.task_Id === task_Id);
        if (!task) return;
        
        document.getElementById('edittask_Id').value = task_Id;
        document.getElementById('editTitle').value = task.title;
        document.getElementById('editDescription').value = task.description;
        document.getElementById('editAssignedTo').value = task.assignedTo;
        document.getElementById('editStatus').value = task.status;
        document.getElementById('editDeadline').value = task.deadline.split('T')[0];
        
        document.getElementById('editTaskModal').classList.remove('hidden');
    }

    function closeEditTaskModal() {
        document.getElementById('editTaskModal').classList.add('hidden');
    }

    // Edit task
    document.getElementById('editTaskForm').addEventListener('submit', async (e) => {
      e.preventDefault(); // Prevent default form submission

      const task_Id = document.getElementById('edittask_Id').value;
      
      // Gather form data manually
      const formData = {
        title: document.getElementById('editTitle').value,
        description: document.getElementById('editDescription').value,
        assignedTo: document.getElementById('editAssignedTo').value,
        status: document.getElementById('editStatus').value,
        deadline: document.getElementById('editDeadline').value
      };

      try {

        // Send PUT request with the form data as JSON
        const response = await fetch(`/dev/admin/tasks/${task_Id}`, {
          method: 'PUT',
          headers: {
            'Content-Type': 'application/json'  // Make sure the server expects JSON
          },
          body: JSON.stringify(formData) // Ensure formData is correctly serialized to JSON
        });

        if (response.ok) {
          alert('Task updated successfully');
          window.location.reload();  // Refresh page after successful update
        } else {
          alert('Error updating task: ' + errorData.message);
        }
      } catch (error) {
        console.error('Error updating task:', error);
        alert('Error updating task');
      }
    });

    // deleting a task
    async function deleteTask(task_Id) {
        if (!confirm('Are you sure you want to delete this task?')) return;

        try {
            const response = await fetch(`/dev/admin/tasks/${task_Id}`, {
            method: 'DELETE',
            headers: {
                'Content-Type': 'application/json'
            }
            });

            if (response.ok) {
            window.location.reload();
            } else {
            alert('Error deleting task');
            }
        } catch (error) {
            alert('Error deleting task');
        }
    }
  </script>
</body>
</html>